diff --git a/ext/httpdomain.py b/ext/httpdomain.py
index 5e8803d..0c1e3e0 100644
--- a/ext/httpdomain.py
+++ b/ext/httpdomain.py
@@ -222,49 +222,42 @@ class HTTPResource(ObjectDescription):
             "parameter",
             label="Parameters",
             names=("param", "parameter", "arg", "argument"),
-            typerolename="obj",
             typenames=("paramtype", "type"),
         ),
         TypedField(
             "jsonobject",
             label="JSON Object",
             names=("jsonparameter", "jsonparam", "json"),
-            typerolename="obj",
             typenames=("jsonparamtype", "jsontype"),
         ),
         TypedField(
             "requestjsonobject",
             label="Request JSON Object",
             names=("reqjsonobj", "reqjson", "<jsonobj", "<json"),
-            typerolename="obj",
             typenames=("reqjsontype", "<jsontype"),
         ),
         TypedField(
             "requestjsonarray",
             label="Request JSON Array of Objects",
             names=("reqjsonarr", "<jsonarr"),
-            typerolename="obj",
             typenames=("reqjsonarrtype", "<jsonarrtype"),
         ),
         TypedField(
             "responsejsonobject",
             label="Response JSON Object",
             names=("resjsonobj", "resjson", ">jsonobj", ">json"),
-            typerolename="obj",
             typenames=("resjsontype", ">jsontype"),
         ),
         TypedField(
             "responsejsonarray",
             label="Response JSON Array of Objects",
             names=("resjsonarr", ">jsonarr"),
-            typerolename="obj",
             typenames=("resjsonarrtype", ">jsonarrtype"),
         ),
         TypedField(
             "queryparameter",
             label="Query Parameters",
             names=("queryparameter", "queryparam", "qparam", "query"),
-            typerolename="obj",
             typenames=("queryparamtype", "querytype", "qtype"),
         ),
         GroupedField(
@@ -275,13 +268,13 @@ class HTTPResource(ObjectDescription):
         GroupedField(
             "requestheader",
             label="Request Headers",
-            rolename="mailheader",
+            rolename="header",
             names=("<header", "reqheader", "requestheader"),
         ),
         GroupedField(
             "responseheader",
             label="Response Headers",
-            rolename="mailheader",
+            rolename="header",
             names=(">header", "resheader", "responseheader"),
         ),
         GroupedField(
@@ -533,16 +526,16 @@ class HTTPDomain(Domain):
     label = "HTTP"
 
     object_types = {
-        "options": ObjType("options", "options", "obj"),
-        "head": ObjType("head", "head", "obj"),
-        "post": ObjType("post", "post", "obj"),
-        "get": ObjType("get", "get", "obj"),
-        "put": ObjType("put", "put", "obj"),
-        "patch": ObjType("patch", "patch", "obj"),
-        "delete": ObjType("delete", "delete", "obj"),
-        "trace": ObjType("trace", "trace", "obj"),
-        "copy": ObjType("copy", "copy", "obj"),
-        "any": ObjType("any", "any", "obj"),
+        "options": ObjType("options", "options"),
+        "head": ObjType("head", "head"),
+        "post": ObjType("post", "post"),
+        "get": ObjType("get", "get"),
+        "put": ObjType("put", "put"),
+        "patch": ObjType("patch", "patch"),
+        "delete": ObjType("delete", "delete"),
+        "trace": ObjType("trace", "trace"),
+        "copy": ObjType("copy", "copy"),
+        "any": ObjType("any", "any"),
     }
 
     directives = {
@@ -606,7 +599,7 @@ class HTTPDomain(Domain):
             text = contnode.rawsource
             if typ == "statuscode":
                 return http_statuscode_role(None, text, text, None, None)[0][0]
-            elif typ == "mailheader":
+            elif typ == "header":
                 return http_header_role(None, text, text, None, None)[0][0]
             else:
                 return nodes.emphasis(text, text)
@@ -633,6 +626,7 @@ class HTTPLexer(RegexLexer):
     def header_callback(self, match):
         if match.group(1).lower() == "content-type":
             content_type = match.group(5).strip()
+            self.full_content_type = content_type
             if ";" in content_type:
                 content_type = content_type[: content_type.find(";")].strip()
             self.content_type = content_type
@@ -660,7 +654,7 @@ class HTTPLexer(RegexLexer):
             except ClassNotFound:
                 pass
             else:
-                for idx, token, value in lexer.get_tokens_unprocessed(content):
+                for idx, token, value in lexer.get_tokens_unprocessed(("Content-Type: " + self.full_content_type + "\n\n" + content) if content_type.startswith('multipart/') else content):
                     yield offset + idx, token, value
                 return
         yield offset, Text, content
@@ -709,4 +703,4 @@ class HTTPLexer(RegexLexer):
 
 def setup(app):
     app.add_domain(HTTPDomain)
-    app.add_lexer("http", HTTPLexer())
+    app.add_lexer("http", HTTPLexer)
diff --git a/src/api/server/common.rst b/src/api/server/common.rst
index 222b896..e8efcf7 100644
--- a/src/api/server/common.rst
+++ b/src/api/server/common.rst
@@ -1904,8 +1904,7 @@ See :ref:`Configuration of Prometheus Endpoint <config/prometheus>` for details.
 
         {
           "uptime": 259,
-          "memory": {
-          ...
+          "memory": 1024
         }
 
     These statistics are generally intended for CouchDB developers only.
@@ -2308,8 +2307,7 @@ You can verify the change by obtaining a list of UUIDs:
                             "detail": "initial_copy",
                             "timestamp": "2019-03-28T15:28:02Z",
                             "type": "running"
-                        },
-                        ...
+                        }
                     ],
                     "id": "001-171d1211418996ff47bd610b1d1257fc4ca2628868def4a05e63e8f8fe50694a",
                     "job_state": "completed",
@@ -2324,8 +2322,7 @@ You can verify the change by obtaining a list of UUIDs:
                     ],
                     "type": "split",
                     "update_time": "2019-03-28T15:28:08Z"
-                },
-                ...
+                }
             ],
             "offset": 0,
             "total_rows": 24
@@ -2402,8 +2399,7 @@ You can verify the change by obtaining a list of UUIDs:
                     "detail": "initial_copy",
                     "timestamp": "2019-03-28T15:28:02Z",
                     "type": "running"
-                },
-                ...
+                }
             ]
         }
 
@@ -2461,11 +2457,11 @@ You can verify the change by obtaining a list of UUIDs:
         Accept: application/json
         Content-Type: application/json
 
-       {
-           "db": "db3",
-           "range": "80000000-ffffffff",
-           "type": "split"
-       }
+        {
+            "db": "db3",
+            "range": "80000000-ffffffff",
+            "type": "split"
+        }
 
     **Response**:
 
diff --git a/src/ddocs/search.rst b/src/ddocs/search.rst
index 5dbc990..4f4e0e4 100644
--- a/src/ddocs/search.rst
+++ b/src/ddocs/search.rst
@@ -784,7 +784,7 @@ results for each unique value of each named field.
 
 *Example of a query using the counts facet syntax:*
 
-.. code-block:: http
+.. code-block::
 
     ?q=*:*&counts=["type"]
 
@@ -857,7 +857,7 @@ brackets (``[``, ``]``). Exclusive range queries are denoted by curly brackets (
 
 *Example of a request that uses faceted search for matching ranges:*
 
-.. code-block:: http
+.. code-block::
 
     ?q=*:*&ranges={"price":{"cheap":"[0 TO 100]","expensive":"{100 TO Infinity}"}}
 
